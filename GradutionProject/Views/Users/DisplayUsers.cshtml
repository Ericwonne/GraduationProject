@model System.Data.DataTable
@{
    ViewBag.Title = "Display Users";
}
@*<link href="http://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="~/Content/htmleaf-demo.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/samples-styles.css" />*@
<style type="text/css">
    td.alt {
        background-color: #ffc;
        background-color: rgba(230, 127, 34, 0.2);
    }
</style>
<style type="text/css">
    * {
        outline: none;
    }

    .tippy-tooltip.honeybee-theme {
        /* Your styling here. Example: */
        background-color: yellow;
        border: 2px solid orange;
    }

        .tippy-tooltip.honeybee-theme [x-arrow] {
            /* Your arrow styling here. Uses transform: rotate() so no need for CSS triangle shenanigans. */
            background-color: yellow;
            border: 2px solid;
            border-color: transparent transparent orange orange; /* same for any position */
        }

        .tippy-tooltip.honeybee-theme .tippy-tooltip-content {
            /* Your styling here. Example: */
            color: black;
        }

        .tippy-tooltip.honeybee-theme [x-circle] {
            /* Your styling here. Example: */
            background-color: yellow;
        }

    .tippy-touch {
        cursor: pointer !important;
    }

    .tippy-popper {
        visibility: hidden;
        max-width: 400px;
        -webkit-perspective: 1000px;
        perspective: 1000px;
        z-index: 9999;
    }

        .tippy-popper.enter {
            opacity: 1;
            -webkit-transition-property: all;
            transition-property: all;
            -webkit-transition-timing-function: ease-out;
            transition-timing-function: ease-out;
        }

        .tippy-popper.leave {
            opacity: 0;
            -webkit-transition-property: all;
            transition-property: all;
            -webkit-transition-timing-function: ease-in;
            transition-timing-function: ease-in;
        }

        .tippy-popper.html-template {
            max-width: 95%;
            max-width: calc(100% - 2rem);
        }

        .tippy-popper[x-placement=top] [x-arrow] {
            -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
            bottom: -5px;
        }

        .tippy-popper[x-placement=top] [x-circle] {
            -webkit-transform-origin: 0 33%;
            transform-origin: 0 33%;
        }

            .tippy-popper[x-placement=top] [x-circle].enter {
                opacity: 1;
                -webkit-transform: scale(1) translate(-50%,-50%);
                transform: scale(1) translate(-50%,-50%);
            }

            .tippy-popper[x-placement=top] [x-circle].leave {
                opacity: 0;
                -webkit-transform: scale(0) translate(-50%,-50%);
                transform: scale(0) translate(-50%,-50%);
            }

        .tippy-popper[x-placement=top] [data-animation=none].enter, .tippy-popper[x-placement=top] [data-animation=none].leave {
            opacity: 1;
            -webkit-transform: translateY(-10px);
            transform: translateY(-10px);
        }

        .tippy-popper[x-placement=top] [data-animation=perspective] {
            -webkit-transform-origin: bottom;
            transform-origin: bottom;
        }

            .tippy-popper[x-placement=top] [data-animation=perspective].enter {
                opacity: 1;
                -webkit-transform: translateY(-10px) rotateX(0);
                transform: translateY(-10px) rotateX(0);
            }

            .tippy-popper[x-placement=top] [data-animation=perspective].leave {
                opacity: 0;
                -webkit-transform: translateY(0) rotateX(90deg);
                transform: translateY(0) rotateX(90deg);
            }

        .tippy-popper[x-placement=top] [data-animation=fade].enter {
            opacity: 1;
            -webkit-transform: translateY(-10px);
            transform: translateY(-10px);
        }

        .tippy-popper[x-placement=top] [data-animation=fade].leave {
            opacity: 0;
            -webkit-transform: translateY(-10px);
            transform: translateY(-10px);
        }

        .tippy-popper[x-placement=top] [data-animation=shift].enter {
            opacity: 1;
            -webkit-transform: translateY(-10px);
            transform: translateY(-10px);
        }

        .tippy-popper[x-placement=top] [data-animation=shift].leave {
            opacity: 0;
            -webkit-transform: translateY(0);
            transform: translateY(0);
        }

        .tippy-popper[x-placement=top] [data-animation=scale].enter {
            opacity: 1;
            -webkit-transform: translateY(-10px) scale(1);
            transform: translateY(-10px) scale(1);
        }

        .tippy-popper[x-placement=top] [data-animation=scale].leave {
            opacity: 0;
            -webkit-transform: translateY(0) scale(0);
            transform: translateY(0) scale(0);
        }

        .tippy-popper[x-placement=bottom] [x-arrow] {
            -webkit-transform: rotate(135deg);
            transform: rotate(135deg);
            top: -5px;
        }

        .tippy-popper[x-placement=bottom] [x-circle] {
            -webkit-transform-origin: 0 -33%;
            transform-origin: 0 -33%;
        }

            .tippy-popper[x-placement=bottom] [x-circle].enter {
                opacity: 1;
                -webkit-transform: scale(1) translate(-50%,-50%);
                transform: scale(1) translate(-50%,-50%);
            }

            .tippy-popper[x-placement=bottom] [x-circle].leave {
                opacity: 0;
                -webkit-transform: scale(0) translate(-50%,-50%);
                transform: scale(0) translate(-50%,-50%);
            }

        .tippy-popper[x-placement=bottom] [data-animation=none].enter, .tippy-popper[x-placement=bottom] [data-animation=none].leave {
            opacity: 1;
            -webkit-transform: translateY(10px);
            transform: translateY(10px);
        }

        .tippy-popper[x-placement=bottom] [data-animation=perspective] {
            -webkit-transform-origin: top;
            transform-origin: top;
        }

            .tippy-popper[x-placement=bottom] [data-animation=perspective].enter {
                opacity: 1;
                -webkit-transform: translateY(10px) rotateX(0);
                transform: translateY(10px) rotateX(0);
            }

            .tippy-popper[x-placement=bottom] [data-animation=perspective].leave {
                opacity: 0;
                -webkit-transform: translateY(0) rotateX(-90deg);
                transform: translateY(0) rotateX(-90deg);
            }

        .tippy-popper[x-placement=bottom] [data-animation=fade].enter {
            opacity: 1;
            -webkit-transform: translateY(10px);
            transform: translateY(10px);
        }

        .tippy-popper[x-placement=bottom] [data-animation=fade].leave {
            opacity: 0;
            -webkit-transform: translateY(10px);
            transform: translateY(10px);
        }

        .tippy-popper[x-placement=bottom] [data-animation=shift].enter {
            opacity: 1;
            -webkit-transform: translateY(10px);
            transform: translateY(10px);
        }

        .tippy-popper[x-placement=bottom] [data-animation=shift].leave {
            opacity: 0;
            -webkit-transform: translateY(0);
            transform: translateY(0);
        }

        .tippy-popper[x-placement=bottom] [data-animation=scale].enter {
            opacity: 1;
            -webkit-transform: translateY(10px) scale(1);
            transform: translateY(10px) scale(1);
        }

        .tippy-popper[x-placement=bottom] [data-animation=scale].leave {
            opacity: 0;
            -webkit-transform: translateY(0) scale(0);
            transform: translateY(0) scale(0);
        }

        .tippy-popper[x-placement=left] [x-arrow] {
            -webkit-transform: rotate(135deg);
            transform: rotate(135deg);
            right: -5px;
            top: 50%;
        }

        .tippy-popper[x-placement=left] [x-circle] {
            -webkit-transform-origin: 50% 5%;
            transform-origin: 50% 5%;
        }

            .tippy-popper[x-placement=left] [x-circle].enter {
                opacity: 1;
                -webkit-transform: scale(1) translate(-50%,-50%);
                transform: scale(1) translate(-50%,-50%);
            }

            .tippy-popper[x-placement=left] [x-circle].leave {
                opacity: 0;
                -webkit-transform: scale(0) translate(-50%,-33%);
                transform: scale(0) translate(-50%,-33%);
            }

        .tippy-popper[x-placement=left] [data-animation=none].enter, .tippy-popper[x-placement=left] [data-animation=none].leave {
            opacity: 1;
            -webkit-transform: translateX(-10px);
            transform: translateX(-10px);
        }

        .tippy-popper[x-placement=left] [data-animation=perspective] {
            -webkit-transform-origin: right;
            transform-origin: right;
        }

            .tippy-popper[x-placement=left] [data-animation=perspective].enter {
                opacity: 1;
                -webkit-transform: translateX(-10px) rotateY(0);
                transform: translateX(-10px) rotateY(0);
            }

            .tippy-popper[x-placement=left] [data-animation=perspective].leave {
                opacity: 0;
                -webkit-transform: translateX(0) rotateY(-90deg);
                transform: translateX(0) rotateY(-90deg);
            }

        .tippy-popper[x-placement=left] [data-animation=fade].enter {
            opacity: 1;
            -webkit-transform: translateX(-10px);
            transform: translateX(-10px);
        }

        .tippy-popper[x-placement=left] [data-animation=fade].leave {
            opacity: 0;
            -webkit-transform: translateX(-10px);
            transform: translateX(-10px);
        }

        .tippy-popper[x-placement=left] [data-animation=shift].enter {
            opacity: 1;
            -webkit-transform: translateX(-10px);
            transform: translateX(-10px);
        }

        .tippy-popper[x-placement=left] [data-animation=shift].leave {
            opacity: 0;
            -webkit-transform: translateX(0);
            transform: translateX(0);
        }

        .tippy-popper[x-placement=left] [data-animation=scale].enter {
            opacity: 1;
            -webkit-transform: translateX(-10px) scale(1);
            transform: translateX(-10px) scale(1);
        }

        .tippy-popper[x-placement=left] [data-animation=scale].leave {
            opacity: 0;
            -webkit-transform: translateX(0) scale(0);
            transform: translateX(0) scale(0);
        }

        .tippy-popper[x-placement=right] [x-arrow] {
            -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
            left: -5px;
            top: 50%;
        }

        .tippy-popper[x-placement=right] [x-circle] {
            -webkit-transform-origin: -50% 5%;
            transform-origin: -50% 5%;
        }

            .tippy-popper[x-placement=right] [x-circle].enter {
                opacity: 1;
                -webkit-transform: scale(1) translate(-50%,-50%);
                transform: scale(1) translate(-50%,-50%);
            }

            .tippy-popper[x-placement=right] [x-circle].leave {
                opacity: 0;
                -webkit-transform: scale(0) translate(-50%,-33%);
                transform: scale(0) translate(-50%,-33%);
            }

        .tippy-popper[x-placement=right] [data-animation=none].enter, .tippy-popper[x-placement=right] [data-animation=none].leave {
            opacity: 1;
            -webkit-transform: translateX(10px);
            transform: translateX(10px);
        }

        .tippy-popper[x-placement=right] [data-animation=perspective] {
            -webkit-transform-origin: left;
            transform-origin: left;
        }

            .tippy-popper[x-placement=right] [data-animation=perspective].enter {
                opacity: 1;
                -webkit-transform: translateX(10px) rotateY(0);
                transform: translateX(10px) rotateY(0);
            }

            .tippy-popper[x-placement=right] [data-animation=perspective].leave {
                opacity: 0;
                -webkit-transform: translateX(0) rotateY(90deg);
                transform: translateX(0) rotateY(90deg);
            }

        .tippy-popper[x-placement=right] [data-animation=fade].enter {
            opacity: 1;
            -webkit-transform: translateX(10px);
            transform: translateX(10px);
        }

        .tippy-popper[x-placement=right] [data-animation=fade].leave {
            opacity: 0;
            -webkit-transform: translateX(10px);
            transform: translateX(10px);
        }

        .tippy-popper[x-placement=right] [data-animation=shift].enter {
            opacity: 1;
            -webkit-transform: translateX(10px);
            transform: translateX(10px);
        }

        .tippy-popper[x-placement=right] [data-animation=shift].leave {
            opacity: 0;
            -webkit-transform: translateX(0);
            transform: translateX(0);
        }

        .tippy-popper[x-placement=right] [data-animation=scale].enter {
            opacity: 1;
            -webkit-transform: translateX(10px) scale(1);
            transform: translateX(10px) scale(1);
        }

        .tippy-popper[x-placement=right] [data-animation=scale].leave {
            opacity: 0;
            -webkit-transform: translateX(0) scale(0);
            transform: translateX(0) scale(0);
        }

    .tippy-tooltip {
        position: relative;
        color: #fff;
        border-radius: 4px;
        padding: .5rem 1rem;
        text-align: center;
        will-change: transform;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        background-color: #333;
    }

        .tippy-tooltip [x-arrow] {
            z-index: -1;
            position: absolute;
            width: 10px;
            height: 10px;
            background-color: #333;
            border: 1px solid;
            border-color: transparent transparent #333 #333;
        }

        .tippy-tooltip[data-animatefill] {
            overflow: hidden;
            background-color: transparent;
        }

        .tippy-tooltip [x-circle] {
            position: absolute;
            background-color: #333;
            border-radius: 50%;
            width: 130%;
            width: calc(125% + 2rem);
            height: 0;
            padding-bottom: 130%;
            padding-bottom: calc(125% + 2rem);
            left: 50%;
            -webkit-transition: all ease-out;
            transition: all ease-out;
            z-index: -1;
            opacity: 0;
        }

        .tippy-tooltip.light-theme {
            color: #203d5d;
            box-shadow: 0 0 16px -4px rgba(0,20,40,.2),0 0 80px -10px rgba(0,20,40,.3);
            background-color: #f3f6f9;
            border: 1px solid #ced2e2;
        }

            .tippy-tooltip.light-theme [x-circle] {
                background-color: #f3f6f9;
            }

            .tippy-tooltip.light-theme [x-arrow] {
                background-color: #f3f6f9;
                border-color: transparent transparent #ced2e2 #ced2e2;
            }

            .tippy-tooltip.light-theme[data-animatefill] {
                background-color: transparent;
            }
</style>
<body>
    <h2>教务管理系统的所有用户（管理员除外）<small>一共有<strong>@Model.Rows.Count</strong>  位用户</small></h2>
    <br />
    <div class="container">
        <div class="input-group">
            <div class="input-group-addon"><i class="fa fa-search fa-lg"></i>&nbsp;</div>
            <input class="form-control" type="search" id="input-filter" size="15" placeholder="搜索表格中的条目" />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <small><i class="glyphicon glyphicon-question-sign" style="color:forestgreen"></i></small> 用户类型（学生 &nbsp; 教师）
            &nbsp;&nbsp;&nbsp;&nbsp;
        </div>
        <table class="table">
            <thead>
                <tr>
                    @*@foreach (var col in Model.Columns)
                        {
                            <td>@col</td>
                        }*@
                    <th><i class="fa fa-hashtag"></i>&nbsp;姓名 </th>
                    <th><i class="fa fa-hashtag"></i>&nbsp;电子邮箱</th>
                    <th><i class="fa fa-hashtag"></i>&nbsp;注册日期</th>
                    <th><i class="fa fa-hashtag"></i>&nbsp;用户类型</th>
                    <th><i class="fa fa-hashtag"></i>&nbsp;操作</th>
                </tr>
            </thead>
            <tbody>
                @foreach (System.Data.DataRow rows in Model.Rows)
                {
                    <tr>
                        <td><a name="hiddena" style="color:blue" href="SpecificUser?id=@rows[0]">@rows[1]</a></td>
                        <td><a href="mailto:@rows[2]">@rows[2]</a></td>
                        <td>@rows[3]</td>
                        <td name="usertype">@rows[4]</td>
                        <td>
                            <!--傻傻的方法 onclick="getSpecificInfo(this.parentElement.parentElement.children[0].children[0].getAttribute('href').split('=')[1])"-->
                            <button id="@rows[0]" class="btn btn-default tippy-arrow" data-toggle="modal" data-target="#myModal" onclick="getSpecificInfo('@rows[0]', '@rows[1]')" title="@rows[1]  @rows[2]">
                                <!--<button class="btn btn-link">-->
                                管理
                            </button>
                        </td>
                        <td class="hidden"></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- 模态框（Modal） -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title" id="myModalLabel"></h4>
                </div>
                <div id="modal-body" class="modal-body" style="margin-top:0">
                </div>
                <div class="modal-footer" style="margin-top:0">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        关闭
                    </button>
                    <button type="button" class="btn btn-primary" onclick="submitModal()">
                        提交更改
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>
</body>
<script src="https://cdn.bootcss.com/jquery/3.1.1/jquery.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.filtertable.min.js"></script>
<script src="~/Scripts/tippy.js"></script>
<script>
    //Floppy
    new Tippy('.tippy-arrow', { position: 'top', animation: 'scale', arrow: 'true' });

    //全局变量
    var initialModal = null;
    var DBFieldToHumanReadable = null;  //a map

    //Onload
    window.onload = function LoadAllDependencies() {
        //change usertype to humanreadble
        userTypeHumanReadable();
        //HumanReadable Map
        DBFieldToHumanReadable = new Map(
            [
                ['uniqueClientID', '用户编号'],
                ['name', '姓名'],
                ['gender', '性别'],
                ['age', '年龄'],
                ['email', '邮箱'],
                ['wechat', '微信'],
                ['qqNumber', 'QQ'],
                ['phone', '手机号码'],
                ['university', '校区'],
                ['college', '学院'],
                ['major', '专业'],
                ['position', '当前学位'],
                ['grade', '年级'],
                ['cardNo', '学号'],
                ['cardPass', '密码'],
                ['courses','课程链接'],
                ['workNo','工号'],
                ['workPass','密码'],
                ['faculty', '系别']
            ]
        );
        //---------------loadPinyin -- 用来支持拼音搜索表格数据----BEGIN-----//
        var aList = document.getElementsByName("hiddena");
        var hiddenList = document.getElementsByClassName("hidden");

        for (var index = 0; index < aList.length; index++) {
            hiddenList[index].innerText = ConvertPinyin(aList[index].innerText);
        }
        //---------------loadPinyin -- 用来支持拼音搜索表格数据----END-----//

        //---------------setTooltip -- 用来支持Tooltip----BEGIN-----//
        //if (sessionStorage.tooltip != undefined && sessionStorage.tooltipvalue != undefined) {
        //    document.getElementById(sessionStorage.tooltip).setAttribute('title', sessionStorage.tooltipvalue);
        //    sessionStorage.removeItem('tooltip');
        //    sessionStorage.removeItem('tooltipvalue');
        //}
        //---------------setTooltip -- 用来支持Tooltip----BEGIN-----//
    }

    //支持搜索
    $(document).ready(function () {
        $('table').filterTable({ // apply filterTable to all tables on this page
            inputSelector: '#input-filter' // use the existing input instead of creating a new one
        });
    });

    //点击【管理】按钮后向数据库请求数据动态写入Modal框
    function getSpecificInfo(id, name) {
        document.getElementById('myModalLabel').innerHTML = "修改" + name + "的信息";
        var result = "";
        $.ajax({
            type: "GET",
            url: "GetSpecificUser",
            data: "id=" + id,
            contentType: false,
            processData: false,
            async: false,               //同步: Google"如何获取Ajax的返回值,了解只有同步机制下可以获取返回值，否则获取到的就是undefined"
            success: function (response) {
                result = response;
            },
            error: function (response) {
                console.log(response);
            }
        });
        result = result.split('&');
        var one_record = "", element = "<table id='dynamic_table' class='table table-condensed'>"; // internal_initial_modal = "";

        for (var i = 0; i < result.length; i++) {
            one_record = result[i].split('=');      //one_record[0]: attribute;   one_record[1]: value;
            element += "<tr><td><label>" + DBFieldToHumanReadable.get(one_record[0]) + "</label></td>" + "<td><input type='text' class='form-control' placeholder=" + one_record[1] + " /></td></tr>";
            //internal_initial_modal += one_record[1] + "&";
        }
        element += "</table>";
        var modal = document.getElementById("modal-body");
        modal.innerHTML = element;
        //此处位置是需要禁用的input元素的索引值
        //______________________________________[0]______________________________________
        modal.children[0].children[0].children[0].children[1].children[0].setAttribute('disabled', '');
        //initialModal = internal_initial_modal.substr(0, internal_initial_modal.length - 1);
        initialModal = result;
    }

    //点击【提交更改】—— 提交原始字符串给Action进行处理后成为SQL字符串
    //【未完成】--------- 判断特殊字符（'%', 'At', '`', '^', '&', '='）不能插入数据库 】---------【未完成】
    function submitModal() {
        //console.log(initialModal);
        //initialModal = initialModal.split('&');

        var dynamic_table_contents = document.getElementById('dynamic_table').getElementsByTagName('input');
        var ajaxData = '', tmp = '';
        var ifchanged = false;   //是否进行更改
        //var i从1开始因为第一个数据不可改变
        for (var i = 1; i < dynamic_table_contents.length; i++) {
            //tmp = dynamic_table_contents[i].getAttribute('value');  ----which just doesn't work using getAttribute(), confusing yet.
            //Understand now: the value property of an element is updated with its current status, while getAttribute('value') is just getting its default value, which is not changed.
            tmp = dynamic_table_contents[i].value;
            if (tmp == "") {
                continue;
            }
            else if (tmp.indexOf('&') != -1) {
                alert("对不起，您修改的内容中不能含有“&”符号！");
                ajaxData = null;
                return;
            }
            else if (tmp.indexOf('=') != -1) {
                alert("对不起，您修改的内容中不能含有“=”符号！");
                ajaxData = null;
                return;
            }
            else if (tmp.indexOf('%') != -1) {
                alert("对不起，您修改的内容中不能含有“%”符号！");
                ajaxData = null;
                return;
            }
            else {
                ifchanged = true;
                ajaxData += initialModal[i].split('=')[0] + '=' + '\'' + tmp + '\'' + '&';
            }
        }
        if (ifchanged == false) {
            alert("您未作任何修改！");
            return;
        }

        ajaxData = ajaxData.substr(0, ajaxData.length - 1);                       //去掉最后多余的‘&’符号
        ajaxData = dynamic_table_contents[0].getAttribute('placeholder') + '&' + ajaxData;    //把uniqueclientid值传入

        var parames = new Array();
        parames.push({ name: "ajaxData", value: ajaxData });

        Post("ModifySpecificUser", parames);

        //sessionStorage.tooltip = dynamic_table_contents[0].getAttribute('placeholder');
        //sessionStorage.tooltipvalue = ajaxData;

        //The below commented code killed me almost!
        //$.ajax({
        //    type: "POST",
        //    url: "ModifySpecificUser",
        //    data: { "ajaxData": ajaxData },
        //    contentType: false,
        //    processData: false,
        //    dataType: "text",
        //    async: false,               //同步: Google"如何获取Ajax的返回值,了解只有同步机制下可以获取返回值，否则获取到的就是undefined"
        //    success: function (response) {
        //        alert("修改成功！");
        //    },
        //    error: function (response) {
        //        console.log(response);
        //    }
        //});

        //判断值是否改变-【已弃用】
        //for (var i = 1; i < dynamic_table_contents.length; i++) {
        //    if (dynamic_table_contents[i].value == initialModal[i]) {
        //        alert(dynamic_table_contents[i].value);
        //    }
        //}
    }

    //Copied from Login.cshtml
    function Post(URL, PARAMTERS) {
        //创建form表单
        var temp_form = document.createElement("form");
        temp_form.action = URL;
        //如需打开新窗口，form的target属性要设置为'_blank'
        temp_form.target = "_self";
        temp_form.method = "post";
        temp_form.style.display = "none";
        //添加参数
        for (var item in PARAMTERS) {
            var opt = document.createElement("textarea");
            opt.name = PARAMTERS[item].name;
            opt.value = PARAMTERS[item].value;
            temp_form.appendChild(opt);
        }
        document.body.appendChild(temp_form);
        //提交数据
        temp_form.submit();
    }
    
    function userTypeHumanReadable() {
        var usertype=document.getElementsByName('usertype');
        for (var i = 0; i < usertype.length; i++) {
            switch (usertype[i].innerText) {
                case 'S': usertype[i].innerHTML = '学生'; break;
                case 'T': usertype[i].innerHTML = '教师'; break;
            }
        }
    }
</script>